<h1 class="font-bold text-sm uppercase text-gray-700">About</h1>
<h3 class="font-bold text-xs text-gray-700">Developer: Shaun Farrell</h3>

<div class="mt-8">
  <p class="italic">
    Please be aware that the browser preview extension contains a bug which
    prevents the proper rendering and interaction of select lists.
  </p>
  <a
    class="text-blue-500 hover:underline mt-4"
    href="https://github.com/auchenberg/vscode-browser-preview/issues/111"
    target="_blank"
  >Github Issue</a>
</div>

<div class="mt-8">
  <p>
    The application allows users to manage their smart home by providing
    interfaces to a variety of devices.
  </p>
</div>

<div class="mt-8">
  <h3 class="font-bold text-sm uppercase text-gray-700">Web Server</h3>
  <p>
    The web server is built using the
    <a
      class="text-blue-500 hover:underline"
      href="https://www.npmjs.com/package/express"
      target="_blank"
    >Express web framework</a>. It performs server-side rendering via the
    <a
      class="text-blue-500 hover:underline"
      href="https://www.npmjs.com/package/express-handlebars"
      target="_blank"
    >Handlebars template engine</a>. There are two types of endpoints exposed
    within the server, specifically view endpoints which return Handlebars
    rendered pages, and API endpoints which are interacted with be the front-end
    components to perform actions such as saving to the database. Additionally
    it provides a public folder from which the front-end assets are served.
  </p>
</div>

<div class="mt-8">
  <h3 class="font-bold text-sm uppercase text-gray-700">Front-end</h3>
  <p>
    The front-end components are bundled using the
    <a
      class="text-blue-500 hover:underline"
      href="https://rollupjs.org"
      target="_blank"
    >Rollup module bundler</a>
    to produce an
    <a
      class="text-blue-500 hover:underline"
      href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules"
      target="_blank"
    >EMCAScript module</a>. All the front-end components are
    <a
      class="text-blue-500 hover:underline"
      href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"
      target="_blank"
    >web components</a>
    as this provides a high level of flexibility whilst keeping the codebase
    logically separated into re-usable components. The web components do not
    make use of a shadow DOM in order for a global stylesheet to be applied
    directly to them. The
    <a
      class="text-blue-500 hover:underline"
      href="https://tailwindcss.com"
      target="_blank"
    >Tailwind CSS</a>
    and
    <a
      class="text-blue-500 hover:underline"
      href="https://fontawesome.com"
      target="_blank"
    >Font Awesome</a>
    libraries are used for this purpose. The is also the capacity for custom
    styles to assist with styling that is difficult to achieve without using a
    locally built version Tailwind CSS. The
    <a
      class="text-blue-500 hover:underline"
      href="https://maquettejs.org"
      target="_blank"
    >Maquette virtual DOM</a>
    is used to provided a form of templates for the components instead of using
    string literals
  </p>
</div>

<div class="mt-8 mb-4">
  <h3 class="font-bold text-sm uppercase text-gray-700">Database</h3>
  <p>
    The database is a
    <a
      class="text-blue-500 hover:underline"
      href="https://www.mysql.com"
      target="_blank"
    >MySQL</a>
    instance. Each table is represented by a data model, on the server-side, and
    are integrated with a corresponding repository. These repositories are
    responsible for creating and executing database queries and commands. For
    simplicity, the database is created and seeding using
    <a
      class="text-blue-500 hover:underline"
      href="https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/"
      target="_blank"
    >EFCore migrations</a>. The individual commands and queries do not use an
    ORM and are defined by the repositories.
  </p>
</div>